[
    {
        "label": "streamlit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "streamlit",
        "description": "streamlit",
        "detail": "streamlit",
        "documentation": {}
    },
    {
        "label": "chat_bot",
        "importPath": "Inference",
        "description": "Inference",
        "isExtraImport": true,
        "detail": "Inference",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "google.generativeai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "google.generativeai",
        "description": "google.generativeai",
        "detail": "google.generativeai",
        "documentation": {}
    },
    {
        "label": "prompt",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "prompt = st.chat_input(\"Ketik Pesan\")\n# Memproses input dari user\n# Kode ini dijalankan ketika user mengetik pesan dan menekan Enter\nif prompt:\n    # Memanggil fungsi chat_bot untuk mendapatkan respon dari model\n    # chat_bot(prompt) adalah fungsi dari module Inference.py yang melakukan inferensi\n    # menggunakan model Gemini dan mengembalikan responnya\n    response = chat_bot(prompt)\n    # Menampilkan pesan user di chat\n    with st.chat_message(\"user\"):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "chat_bot",
        "kind": 2,
        "importPath": "Inference",
        "description": "Inference",
        "peekOfCode": "def chat_bot(prompt):\n    response = model.generate_content(prompt)\n    return response.text",
        "detail": "Inference",
        "documentation": {}
    },
    {
        "label": "api_key",
        "kind": 5,
        "importPath": "Inference",
        "description": "Inference",
        "peekOfCode": "api_key = os.getenv(\"GEMINI_API_KEY\")\n# Konfigurasi API key\ngenai.configure(api_key=api_key)\n# Inisialisasi model (bisa ganti dengan gemini-1.5-pro atau lainnya)\nmodel = genai.GenerativeModel(\"gemini-2.0-flash\")  # atau \"gemini-pro\", \"gemini-1.5-pro\"\n# Fungsi untuk mengirim pesan\ndef chat_bot(prompt):\n    response = model.generate_content(prompt)\n    return response.text",
        "detail": "Inference",
        "documentation": {}
    },
    {
        "label": "model",
        "kind": 5,
        "importPath": "Inference",
        "description": "Inference",
        "peekOfCode": "model = genai.GenerativeModel(\"gemini-2.0-flash\")  # atau \"gemini-pro\", \"gemini-1.5-pro\"\n# Fungsi untuk mengirim pesan\ndef chat_bot(prompt):\n    response = model.generate_content(prompt)\n    return response.text",
        "detail": "Inference",
        "documentation": {}
    }
]